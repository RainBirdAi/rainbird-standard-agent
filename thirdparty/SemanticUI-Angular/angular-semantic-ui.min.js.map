/**
 * semantic-ui-angular-jquery - 0.2.4
 * Angular Directives for Semantic UI
 * 
 * https://github.com/ClickerMonkey/SemanticUI-Angular
 * Released under the MIT license.
 * Copyright 2018 Philip Diffenderfer and contributors.
 */
{"version":3,"sources":["sm.js","sm-core.js","accordion/sm-accordion.js","checkbox/sm-checkbox.js","checkbox/sm-radio.js","comment/sm-comment.js","dimmer/sm-dimmer.js","dropdown/sm-dropdown.js","embed/sm-embed.js","list/sm-list.js","menu/sm-menu.js","modal/sm-modal.js","popup/sm-popup.js","progress/sm-progress.js","rating/sm-rating.js","search/sm-search.js","shape/sm-shape.js","sidebar/sm-sidebar.js","sticky/sm-sticky.js","tab/sm-tab.js","timeago/sm-timeago.js","transition/sm-transition.js"],"names":["angular","module","app","SemanticUIFactory","$compile","SemanticUI","setDefaultFunction","scope","variable","attributes","func","triggerChange","element","initialized","$watch","updated","$evalAsync","trigger","bindAttribute","attribute","attr","onEvent","settings","evt","existing","undefined","result0","isFunction","apply","this","arguments","result1","linkEvents","defaults","linkings","scopeValue","linkSettings","settingsAttribute","forEach","value","key","createBind","restrict","link","initBind","ready","input","$eval","createBehavior","method","initBehavior","$","enabled","previousEvent","isString","isObject","isDefined","off","on","watcher","expression","context","force","equals","ignoreUpdate","call","set","update","RecursiveCompiler","postLink","post","compiledContents","contents","remove","pre","clone","append","SemanticButton","replace","transclude","template","SemanticItem","icon","SemanticFlatMenu","join","SemanticHtml","$injector","sanitize","$sce","get","getTrustedHtml","trustAsHtml","e","attrs","smHtml","html","factory","directive","SemanticAccordionBind","SemanticAccordion","SemanticAccordionLink","onInit","onOpening","onOpen","onClosing","onClose","onChange","fn","accordion","SemanticAccordionGroup","required","title","active","BEHAVIORS","smAccordionOpen","smAccordionCloseOthers","smAccordionClose","smAccordionToggle","SemanticCheckboxBind","SemanticCheckbox","SemanticCheckboxLink","model","label","indeterminateValue","checkedValue","uncheckedValue","children","onChecked","onIndeterminate","onDeterminate","onUnchecked","onEnable","onDisable","enabledWatcher","checkbox","modelWatcher","$children","settingChildren","change","checked","each","i","child","length","smCheckboxToggle","smCheckboxCheck","smCheckboxUncheck","smCheckboxIndeterminate","smCheckboxDeterminate","smCheckboxEnable","smCheckboxDisable","SemanticRadioBind","SemanticRadio","SemanticRadioLink","name","hasClass","removeClass","smRadioCheck","smRadioEnable","smRadioDisable","SemanticComments","comments","content","avatar","author","date","replies","reply","collapsible","onAuthor","onReply","onShowReplies","onHideReplies","controller","compile","SemanticCommentsController","$scope","setCollapsed","comment","$event","collapse","$isCollapsed","hasReplies","getReplyCount","getShowRepliesText","count","getHideRepliesText","SemanticDimmerBind","SemanticDimmer","SemanticDimmerLink","visible","onShow","onHide","visibleWatcher","dimmer","smDimmerShow","smDimmerHide","smDimmerToggle","SemanticDropdownBind","SemanticDropdown","SemanticDropdownLink","items","disabledItems","defaultText","emptyValue","onAdd","onRemove","onLabelCreate","onLabelSelect","onNoResults","SemanticDropdownController","hashMap","getDisabled","item","indexOf","getValue","getKey","$$hashKey","isEmpty","translateValue","translated","matching","findMatchingItem","hasDefault","getDefaultText","updateHashMap","$timeout","applyValue","dropdown","Array","translatedValue","push","locals","ignoreChange","modelArray","mapped","mappedValue","inArray","splice","smDropdownToggle","smDropdownShow","smDropdownHide","smDropdownClear","smDropdownHideOthers","smDropdownRestoreDefaults","smDropdownRestoreDefaultText","smDropdownRestoreDefaultValue","smDropdownSaveDefaults","smDropdownSetSelected","smDropdownSetText","smDropdownSetValue","smDropdownBindTouchEvents","smDropdownMouseEvents","smDropdownBindIntent","smDropdownUnbindIntent","smDropdownSetActive","smDropdownSetVisible","smDropdownRemoveActive","smDropdownRemoveVisible","SemanticEmbedBind","SemanticEmbed","SemanticEmbedLink","source","sourceId","url","placeholder","onCreate","onDisplay","onPlaceholderDisplay","onEmbed","id","embed","smEmbedReset","smEmbedShow","smEmbedHide","smEmbedDestroy","SemanticList","SemanticListLink","description","image","header","headerHref","onHeader","has","headerLink","getChildCount","SemanticMenu","onClick","hidden","divider","SemanticMenuController","hasChildren","getChildren","getLabel","getIcon","getDescription","isHidden","isDivider","SemanticModalBind","SemanticModal","SemanticModalLink","onVisible","onHidden","onApprove","onDeny","modal","smModalShow","smModalHide","smModalToggle","smModalRefresh","smModalShowDimmer","smModalHideDimmer","smModalHideOthers","smModalHideAll","smModalCacheSizes","smModalSetActive","SemanticPopup","SemanticPopupLink","smPopup","smPopupTitle","smPopupHtml","smPopupPosition","smPopupVariation","smPopupSettings","smPopupOnInit","smPopupOnCreate","smPopupOnRemove","smPopupOnShow","smPopupOnVisible","smPopupOnHide","smPopupOnHidden","popup","SemanticPopupInline","SemanticPopupInlineLink","smPopupInline","smPopupInlineOnInit","smPopupInlineOnCreate","smPopupInlineOnRemove","smPopupInlineOnShow","smPopupInlineOnVisible","smPopupInlineOnHide","smPopupInlineOnHidden","inline","SemanticPopupDisplay","SemanticPopupDisplayLink","smPopupDisplay","smPopupDisplaySettings","smPopupDisplayOnInit","smPopupDisplayOnCreate","smPopupDisplayOnRemove","smPopupDisplayOnShow","smPopupDisplayOnVisible","smPopupDisplayOnHide","smPopupDisplayOnHidden","SemanticPopupDetached","smPopupShow","smPopupHide","smPopupHideAll","smPopupToggle","smPopupReposition","smPopupDestroy","smPopupRemove","SemanticProgress","SemanticProgressLink","total","activeText","successText","errorText","warningText","duration","onSuccess","onActive","onError","onWarning","addText","property","text","progress","showActivity","smProgressIncrement","SemanticRatingBind","SemanticRating","SemanticRatingLink","type","disabled","onRate","rating","valueWatcher","smRatingSet","smRatingDisable","smRatingEnable","smRatingClear","SemanticSearchBind","SemanticSearch","SemanticSearchLink","category","local","remote","onSelect","onResultsAdd","onSearchQuery","onResults","onResultsOpen","onResultsClose","defaultTitle","search","fields","textProperty","apiSettings","result","response","smSearchQuery","smSearchCancelQuery","smSearchSearchLocal","smSearchSearchRemote","smSearchSet","smSearchShowResults","smSearchHideResults","smSearchDestroy","SemanticShapeBind","SemanticShape","SemanticShapeLink","onBeforeChange","shape","smShapeFlipUp","smShapeFlipDown","smShapeFlipLeft","smShapeFlipRight","smShapeFlipOver","smShapeFlipBack","smShapeSetNextSide","smShapeReset","smShapeQueue","smShapeRepaint","smShapeSetDefaultSide","smShapeSetStageSize","smShapeRefresh","SemanticSidebarBind","SemanticSidebar","SemanticSidebarLink","sidebar","pusher","insertBefore","smSidebarShow","smSidebarHide","smSidebarToggle","smSidebarPushPage","smSidebarPullPage","smSidebarAddBodyCss","smSidebarRemoveBodyCss","SemanticStickyBind","SemanticSticky","SemanticStickyLink","onReposition","onScroll","onStick","onUnstick","onTop","onBottom","sticky","smStickyRefresh","SemanticTabBind","SemanticTabMenu","SemanticTabMenuLink","tabs","setActiveTab","tab","elements","hasActive","activeWatcher","SemanticTab","smTabSet","SemanticTimeAgo","getTime","hours","getHours","minutes","getMinutes","minutesPadded","HOURS","getTh","x","THS","getDaysAgo","Math","ceil","Date","MONTHS","timeout","updateText","now","today","getFullYear","getMonth","getDate","yesterday","elapsed","updateIn","minutesAgo","floor","daysAgo","clearTimeout","setTimeout","smTimeAgo","SemanticTransition","SemanticTransitionLink","smTransition","smTransitionEvents","smTransitionOther","transition"],"mappings":"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","file":"angular-semantic-ui.min.js","sourcesContent":["\nangular.module('semantic-ui', [\n  'semantic-ui-core',\n  'semantic-ui-accordion',\n  'semantic-ui-checkbox',\n  'semantic-ui-radio',\n  'semantic-ui-comment',\n  'semantic-ui-dimmer',\n  'semantic-ui-dropdown',\n  'semantic-ui-embed',\n  'semantic-ui-list',\n  'semantic-ui-menu',\n  'semantic-ui-modal',\n  'semantic-ui-popup',\n  'semantic-ui-progress',\n  'semantic-ui-rating',\n  'semantic-ui-search',\n  'semantic-ui-shape',\n  'semantic-ui-sidebar',\n  'semantic-ui-sticky',\n  'semantic-ui-tab',\n  'semantic-ui-transition',\n  'semantic-ui-timeago'\n]);\n","(function(app)\n{\n\n\tapp\n\t\t\t.factory('SemanticUI', ['$compile', SemanticUIFactory])\n\t\t\t.directive('smButton', SemanticButton)\n\t\t\t.directive('smMenuItem', SemanticItem)\n\t\t\t.directive('smFlatMenu', SemanticFlatMenu)\n\t\t\t.directive('smHtml', ['$injector', SemanticHtml])\n\t;\n\n\tfunction SemanticUIFactory($compile)\n\t{\n\t\tvar SemanticUI =\n\t\t\t\t{\n\t\t\t\t\tsetDefaultFunction: function(scope, variable, attributes, func)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( !attributes[ variable ] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscope[ variable ] = func;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttriggerChange: function(scope, variable, element, initialized)\n\t\t\t\t\t{\n\t\t\t\t\t\tscope.$watch( variable, function(updated)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Don't trigger the change event if the element hasn't been initialized.\n\t\t\t\t\t\t\tif ( initialized )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Trigger the change event during a digest cycle so any other\n\t\t\t\t\t\t\t\t// variables that are changing this current digest cycle can finish.\n\t\t\t\t\t\t\t\tscope.$evalAsync(function()\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\telement.trigger('change');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tinitialized = true;\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tbindAttribute: function(scope, variable, element, attribute)\n\t\t\t\t\t{\n\t\t\t\t\t\tscope.$watch( variable, function(updated)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\telement.attr( attribute, updated );\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonEvent: function(settings, evt, func)\n\t\t\t\t\t{\n\t\t\t\t\t\tsettings[ evt ] = (function(existing, undefined)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn function EventHandler()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar result0 = undefined;\n\n\t\t\t\t\t\t\t\tif ( angular.isFunction( existing ) )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresult0 = existing.apply( this, arguments );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar result1 = func.apply( this, arguments );\n\n\t\t\t\t\t\t\t\treturn ( result0 !== undefined ? result0 : result1 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})( settings[ evt ] );\n\t\t\t\t\t},\n\t\t\t\t\tlinkEvents: function(scope, settings, defaults, linkings)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var evt in linkings)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t(function(variable, evt)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSemanticUI.onEvent( settings, evt, function()\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar scopeValue = scope[ variable ];\n\n\t\t\t\t\t\t\t\t\tif ( angular.isFunction( scopeValue ) )\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\treturn scopeValue.apply( this, arguments );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if ( angular.isFunction( defaults[ evt ] ) )\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\treturn defaults[ evt ].apply( this, arguments );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t})( linkings[ evt ], evt );\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlinkSettings: function(scope, element, attributes, module, initialized, settingsAttribute)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar settings = settingsAttribute || 'settings';\n\n\t\t\t\t\t\tif ( settings in attributes )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscope.$watch( settings, function( updated )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ( initialized )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tangular.forEach( updated, function(value, key)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\telement[ module ]( 'setting', key, value );\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tinitialized = true;\n\n\t\t\t\t\t\t\t}, true );\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcreateBind: function(attribute, module)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\n\t\t\t\t\t\t\trestrict: 'A',\n\n\t\t\t\t\t\t\tlink: function(scope, element, attributes)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSemanticUI.linkSettings( scope, element, attributes, module, false, attribute );\n\t\t\t\t\t\t\t\tSemanticUI.initBind( scope, element, attributes, attribute, module );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tinitBind: function(scope, element, attributes, attribute, module)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.ready(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar settings = {};\n\t\t\t\t\t\t\tvar input = attributes[ attribute ];\n\n\t\t\t\t\t\t\tif ( input )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsettings = scope.$eval( input );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\telement[ module ]( settings );\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tcreateBehavior: function(attribute, module, method)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\n\t\t\t\t\t\t\trestrict: 'A',\n\n\t\t\t\t\t\t\tlink: function(scope, element, attributes)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSemanticUI.initBehavior( scope, attributes, attribute, element, module, method );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tinitBehavior: function(scope, attributes, attribute, element, module, method)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Default settings on the attribute.\n\t\t\t\t\t\tvar settings = {\n\t\t\t\t\t\t\t$: undefined,\n\t\t\t\t\t\t\tevt: 'click',\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tvalue: undefined\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tvar onEvent = function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// If the trigger is currently enabled...\n\t\t\t\t\t\t\tif ( settings.enabled )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Call the method on the module.\n\t\t\t\t\t\t\t\t$( settings.$ )[ module ]( method, settings.value );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tvar previousEvent = false;\n\n\t\t\t\t\t\tscope.$watch( attributes[ attribute ], function(input)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// If the attribute value is a string, take it as the selector\n\t\t\t\t\t\t\tif ( angular.isString( input ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsettings.$ = input;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// If the attribute value is an object, overwrite the defaults.\n\t\t\t\t\t\t\telse if ( angular.isObject( input ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ( !angular.isString( input.evt ) ) input.evt = settings.evt;\n\t\t\t\t\t\t\t\tif ( !angular.isDefined( input.enabled ) ) input.enabled = settings.enabled;\n\n\t\t\t\t\t\t\t\tsettings = input;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( previousEvent )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telement.off( previousEvent, onEvent );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\telement.on( previousEvent = settings.evt, onEvent );\n\n\t\t\t\t\t\t}, true );\n\t\t\t\t\t},\n\t\t\t\t\twatcher: function(scope, expression, func, context, force, equals)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ignoreUpdate = false;\n\n\t\t\t\t\t\tscope.$watch( expression, function( updated )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( !ignoreUpdate )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfunc.call( context, updated );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tignoreUpdate = false;\n\n\t\t\t\t\t\t}, equals );\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tset: function(value)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ( scope[ expression ] != value || force )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tscope.$evalAsync(function()\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tscope[ expression ] = value;\n\t\t\t\t\t\t\t\t\t\tignoreUpdate = true;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tupdate: function()\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tscope.$evalAsync(function()\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tignoreUpdate = true;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tRecursiveCompiler: function(postLink)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn function(element, link)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Normalize the link parameter\n\t\t\t\t\t\t\tif( angular.isFunction( link ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlink = { post: link };\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Break the recursion loop by removing the contents\n\t\t\t\t\t\t\tvar contents = element.contents().remove();\n\t\t\t\t\t\t\tvar compiledContents;\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tpre: (link && link.pre) ? link.pre : null,\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * Compiles and re-adds the contents\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tpost: function(scope, element)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Compile the contents\n\t\t\t\t\t\t\t\t\tif( !compiledContents )\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcompiledContents = $compile(contents);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Re-add the compiled contents to the element\n\t\t\t\t\t\t\t\t\tcompiledContents( scope, function(clone)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\telement.append(clone);\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t// Call the post-linking function, if any\n\t\t\t\t\t\t\t\t\tif ( link && link.post )\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlink.post.apply( null, arguments );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( angular.isFunction( postLink ) )\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpostLink.apply( null, arguments );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\treturn SemanticUI;\n\t}\n\n\tfunction SemanticButton()\n\t{\n\t\treturn {\n\n\t\t\trestrict: 'E',\n\n\t\t\treplace: true,\n\n\t\t\ttransclude: true,\n\n\t\t\ttemplate: '<button class=\"ui button\" ng-transclude></button>'\n\t\t};\n\t}\n\n\tfunction SemanticItem()\n\t{\n\t\treturn {\n\n\t\t\trestrict: 'E',\n\n\t\t\treplace: true,\n\n\t\t\ttransclude: true,\n\n\t\t\tscope: {\n\t\t\t\ticon: '@'\n\t\t\t},\n\n\t\t\ttemplate: '<a class=\"item\"><i class=\"{{ icon }} icon\" ng-if=\"icon\"></i><span ng-transclude></span></a>'\n\t\t}\n\t}\n\n\tfunction SemanticFlatMenu()\n\t{\n\t\treturn {\n\n\t\t\trestrict: 'E',\n\n\t\t\treplace: true,\n\n\t\t\ttemplate: [\n\t\t\t\t'<div class=\"menu\">',\n\t\t\t\t'  <div class=\"item\" ng-class=\"{\\'disabled\\': getDisabled(item)}\" ng-repeat=\"item in items\" data-value=\"{{ getValue(item) }}\" sm-html=\"label({item:item})\"></div>',\n\t\t\t\t'</div>'\n\t\t\t].join('\\n')\n\t\t}\n\t}\n\n\tfunction SemanticHtml($injector)\n\t{\n\t\tvar sanitize = function(value)\n\t\t{\n\t\t\treturn value;\n\t\t};\n\n\t\ttry\n\t\t{\n\t\t\t$sce = $injector.get('$sce');\n\n\t\t\tsanitize = function(value)\n\t\t\t{\n\t\t\t\treturn $sce.getTrustedHtml( $sce.trustAsHtml( value ) );\n\t\t\t};\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\n\t\treturn function(scope, element, attrs)\n\t\t{\n\t\t\tscope.$watch( attrs.smHtml, function(value)\n\t\t\t{\n\t\t\t\telement.html( sanitize( value || '' ) );\n\t\t\t});\n\t\t};\n\t}\n\n})( angular.module('semantic-ui-core', []) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticAccordionLink', ['SemanticUI', SemanticAccordionLink])\n    .directive('smAccordionBind', ['SemanticUI', SemanticAccordionBind])\n    .directive('smAccordion', ['SemanticAccordionLink', SemanticAccordion])\n    .directive('smAccordionGroup', SemanticAccordionGroup)\n  ;\n\n  var BEHAVIORS = {\n    smAccordionOpen:        'open',\n    smAccordionCloseOthers: 'close others',\n    smAccordionClose:       'close',\n    smAccordionToggle:      'toggle'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'accordion', method );\n    }]);\n  });\n\n  function SemanticAccordionBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smAccordionBind', 'accordion' );\n  }\n\n  function SemanticAccordion(SemanticAccordionLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Optional */\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onOpening: '=',\n        onOpen: '=',\n        onClosing: '=',\n        onClose: '=',\n        onChange: '='\n      },\n\n      template: '<div class=\"ui accordion\" ng-transclude></div>',\n\n      link: SemanticAccordionLink\n    };\n  }\n\n  function SemanticAccordionLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      element.ready(function()\n      {\n        var settings = scope.settings || {};\n\n        SemanticUI.linkSettings( scope, element, attributes, 'accordion', true );\n\n        SemanticUI.linkEvents( scope, settings, $.fn.accordion.settings, {\n          onOpening:  'onOpening',\n          onOpen:     'onOpen',\n          onClosing:  'onClosing',\n          onClose:    'onClose',\n          onChange:   'onChange'\n        });\n\n        element.accordion( settings );\n\n        if ( angular.isFunction( scope.onInit ) )\n        {\n          scope.onInit( element );\n        }\n      });\n    };\n  }\n\n  function SemanticAccordionGroup()\n  {\n    return {\n      restrict: 'E',\n      required: 'title',\n      transclude: true,\n      scope: {\n        /* Required */\n        title: '=',\n        /* Optional */\n        active: '='\n      },\n      template: [\n        '<div class=\"title\" ng-class=\"{active: active}\">',\n        '  <i class=\"dropdown icon\"></i>',\n        '  {{ title }}',\n        '</div>',\n        '<div class=\"content\" ng-class=\"{active: active}\" ng-transclude>',\n        '</div>'\n      ].join('\\n')\n    }\n  }\n\n})( angular.module('semantic-ui-accordion', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticCheckboxLink', ['SemanticUI', SemanticCheckboxLink])\n    .directive('smCheckboxBind', ['SemanticUI', SemanticCheckboxBind])\n    .directive('smCheckbox', ['SemanticCheckboxLink', SemanticCheckbox])\n  ;\n\n  var BEHAVIORS = {\n    smCheckboxToggle:            'toggle',\n    smCheckboxCheck:             'check',\n    smCheckboxUncheck:           'uncheck',\n    smCheckboxIndeterminate:     'indeterminate',\n    smCheckboxDeterminate:       'determinate',\n    smCheckboxEnable:            'enable',\n    smCheckboxDisable:           'disable'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'checkbox', method );\n    }]);\n  });\n\n  function SemanticCheckboxBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smCheckboxBind', 'checkbox' );\n  }\n\n  function SemanticCheckbox(SemanticCheckboxLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Required */\n        model: '=',\n        label: '@',\n        /* Optional */\n        settings: '=',\n        enabled: '=',\n        indeterminateValue: '=',\n        checkedValue: '=',\n        uncheckedValue: '=',\n        children: '@',\n        onInit: '=',\n        /* Events */\n        onChange:        '=',\n        onChecked:       '=',\n        onIndeterminate: '=',\n        onDeterminate:   '=',\n        onUnchecked:     '=',\n        onEnable:        '=',\n        onDisable:       '='\n      },\n\n      template: [\n        '<div class=\"ui checkbox\">',\n        '  <input type=\"checkbox\">',\n        '  <label>{{ label }}</label>',\n        '</div>'\n      ].join('\\n'),\n\n      link: SemanticCheckboxLink\n    };\n  }\n\n  function SemanticCheckboxLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      element.ready(function()\n      {\n        var settings = scope.settings || {};\n\n        SemanticUI.linkSettings( scope, element, attributes, 'checkbox', true );\n\n        SemanticUI.triggerChange( scope, 'model', element, true );\n\n        var checkedValue = function() {\n          return angular.isDefined( scope.checkedValue ) ? scope.checkedValue : true;\n        };\n        var uncheckedValue = function() {\n          return angular.isDefined( scope.uncheckedValue ) ? scope.uncheckedValue : false;\n        };\n        var indeterminateValue = function() {\n          return angular.isDefined( scope.indeterminateValue ) ? scope.indeterminateValue : void 0;\n        };\n\n        if ( attributes.enabled )\n        {\n          var enabledWatcher = SemanticUI.watcher( scope, 'enabled',\n            function(updated) {\n              if ( angular.isDefined( updated ) ) {\n                element.checkbox( updated ? 'set enabled' : 'set disabled' );\n              }\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onEnable',\n            function(value) {\n              enabledWatcher.set( true );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onDisable',\n            function(value) {\n              enabledWatcher.set( false );\n            }\n          );\n        }\n\n        var modelWatcher = SemanticUI.watcher( scope, 'model',\n          function(updated) {\n            if ( angular.isDefined( updated ) ) {\n              element.checkbox( updated ? 'set checked' : 'set unchecked' );\n            }\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onChecked',\n          function() {\n            modelWatcher.set( checkedValue() );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onUnchecked',\n          function() {\n            modelWatcher.set( uncheckedValue() );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onIndeterminate',\n          function() {\n            modelWatcher.set( indeterminateValue() );\n          }\n        );\n\n        SemanticUI.linkEvents( scope, settings, $.fn.checkbox.settings, {\n          onChange:        'onChange',\n          onChecked:       'onChecked',\n          onIndeterminate: 'onIndeterminate',\n          onDeterminate:   'onDeterminate',\n          onUnchecked:     'onUnchecked',\n          onEnable:        'onEnable',\n          onDisable:       'onDisable'\n        });\n\n        // If the checkbox has children, link the value of this checkbox to the children\n        if ( scope.children )\n        {\n          var $children = $( scope.children );\n          var settingChildren = false;\n\n          SemanticUI.onEvent( settings, 'onChecked',\n            function() {\n              settingChildren = true;\n              $children.checkbox( 'check' );\n              settingChildren = false;\n            }\n          );\n          SemanticUI.onEvent( settings, 'onUnchecked',\n            function() {\n              settingChildren = true;\n              $children.checkbox( 'uncheck' );\n              settingChildren = false;\n            }\n          );\n\n          $children.children('input[type=checkbox], input[type=radio]')\n            .change(function() {\n\n              if ( settingChildren ) {\n                return;\n              }\n\n              var checked = 0;\n\n              $children.each(function(i, child) {\n                if ( $( child ).checkbox( 'is checked') ) {\n                  checked++;\n                }\n              });\n\n              if ( checked === 0 ) {\n                element.checkbox( 'uncheck' );\n              }\n              else if ( checked === $children.length ) {\n                element.checkbox( 'check' );\n              }\n              else {\n                element.checkbox( 'indeterminate' );\n              }\n            })\n          ;\n        }\n\n        // Initialize the element with the given settings.\n        element.checkbox( settings );\n\n        // Set initial state of the checkbox\n        if ( scope.model == checkedValue() )\n        {\n          element.checkbox( 'set checked' );\n        }\n        else if ( scope.model === indeterminateValue() )\n        {\n          element.checkbox( 'set indeterminate' );\n        }\n\n        if ( angular.isDefined( scope.enabled ) && !scope.enabled )\n        {\n          element.checkbox( 'set disabled' );\n        }\n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      });\n    };\n  }\n\n})( angular.module('semantic-ui-checkbox', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticRadioLink', ['SemanticUI', SemanticRadioLink])\n    .directive('smRadioBind', ['SemanticUI', SemanticRadioBind])\n    .directive('smRadio', ['SemanticRadioLink', SemanticRadio])\n  ;\n\n  var BEHAVIORS = {\n    smRadioCheck:             'check',\n    smRadioEnable:            'enable',\n    smRadioDisable:           'disable'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'checkbox', method );\n    }]);\n  });\n\n  function SemanticRadioBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smRadioBind', 'checkbox' );\n  }\n\n  function SemanticRadio(SemanticRadioLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Required */\n        model: '=',\n        label: '@',\n        name: '@',\n        value: '=',\n        /* Optional */\n        settings: '=',\n        enabled: '=',\n        onInit: '=',\n        /* Events */\n        onChange:        '=',\n        onChecked:       '=',\n        onUnchecked:     '=',\n        onEnable:        '=',\n        onDisable:       '='\n      },\n\n      template: [\n        '<div class=\"ui radio checkbox\">',\n        '  <input name=\"{{ name }}\" type=\"radio\">',\n        '  <label>{{ label }}</label>',\n        '</div>'\n      ].join('\\n'),\n\n      link: SemanticRadioLink\n    };\n  }\n\n  function SemanticRadioLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      element.ready(function()\n      {\n        var settings = scope.settings || {};\n\n        SemanticUI.linkSettings( scope, element, attributes, 'checkbox', true );\n\n        SemanticUI.triggerChange( scope, 'model', element, true );\n\n        if ( attributes.enabled )\n        {\n          var enabledWatcher = SemanticUI.watcher( scope, 'enabled',\n            function(updated) {\n              if ( angular.isDefined( updated ) ) {\n                element.checkbox( updated ? 'set enabled' : 'set disabled' );\n              }\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onEnable',\n            function(value) {\n              enabledWatcher.set( true );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onDisable',\n            function(value) {\n              enabledWatcher.set( false );\n            }\n          );\n        }\n\n        var modelWatcher = SemanticUI.watcher( scope, 'model',\n          function(updated) {\n            if ( updated === scope.value ) {\n              element.checkbox( 'set checked' );\n            }\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onChecked',\n          function() {\n            modelWatcher.set( scope.value );\n          }\n        );\n\n        SemanticUI.linkEvents( scope, settings, $.fn.checkbox.settings, {\n          onChange:        'onChange',\n          onChecked:       'onChecked',\n          onUnchecked:     'onUnchecked',\n          onEnable:        'onEnable',\n          onDisable:       'onDisable'\n        });\n\n        // Initialize the element with the given settings.\n        element.checkbox( settings );\n\n        // Set initial state of the radio\n        if ( scope.model === scope.value )\n        {\n          element.checkbox( 'set checked' );\n        }\n\n        // If the radio is a slider, remove the radio class\n        if ( element.hasClass( 'slider' ) )\n        {\n          element.removeClass( 'radio' );\n        }\n\n        if ( angular.isDefined( scope.enabled ) && !scope.enabled )\n        {\n          element.checkbox( 'set disabled' );\n        }\n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      });\n    };\n  }\n\n})( angular.module('semantic-ui-radio', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .controller('SemanticCommentsController', ['$scope', SemanticCommentsController])\n    .directive('smComments', ['SemanticUI', SemanticComments])\n  ;\n\n  function SemanticComments(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      // transclude: true,\n\n      scope: {\n        /* Required */\n        comments: '=',\n        content: '&',\n        /* Optional */\n        avatar: '&',\n        author: '&',\n        date: '&',\n        replies: '&',\n        reply: '=',\n        collapsible: '=',\n\n        onAuthor: '&',\n        onReply: '&',\n        onShowReplies: '&',\n        onHideReplies: '&'\n      },\n\n      template: [\n        '<div class=\"ui comments\">',\n        ' <div class=\"comment\" ng-repeat=\"c in comments\" ng-init=\"$ = {comment: c}; c.$isCollapsed = true;\">',\n        '  <a ng-if=\"avatar($)\" class=\"avatar\" ng-click=\"onAuthor({comment: c, $event: $event})\">',\n        '    <img ng-src=\"{{ avatar($) }}\">',\n        '  </a>',\n        '  <div class=\"content\">',\n        '   <a class=\"author\" ng-click=\"onAuthor({comment: c, $event: $event})\" sm-html=\"author($)\"></a>',\n        '   <div class=\"metadata\">',\n        '    <span class=\"date\" sm-time-ago=\"date($)\"></span>',\n        '   </div>',\n        '   <div class=\"text\" sm-html=\"content($)\"></div>',\n        '   <div class=\"actions\">',\n        '     <a class=\"reply\" ng-click=\"onReply({comment: c, $event: $event})\" ng-if=\"reply\">Reply</a>',\n        '     <a class=\"show-replies\" ng-if=\"reply && collapsible && c.$isCollapsed\" href ng-click=\"setCollapsed(c, $event, false)\" sm-html=\"getShowRepliesText($)\"></a>',\n        '     <a class=\"hide-replies\" ng-if=\"reply && collapsible && !c.$isCollapsed\" href ng-click=\"setCollapsed(c, $event, true)\" sm-html=\"getHideRepliesText($)\"></a>',\n        '   </div>',\n        '  </div>',\n        '  <sm-comments ng-if=\"hasReplies($)\" ng-class=\"{collapsed: collapsible && c.$isCollapsed}\" comments=\"replies($)\" content=\"content({comment: comment})\" avatar=\"avatar({comment: comment})\" author=\"author({comment: comment})\" date=\"date({comment: comment})\" replies=\"replies({comment: comment})\" reply=\"reply\" collapsible=\"collapsible\"',\n        '     on-author=\"onAuthor({comment: comment, $event: $event})\" on-reply=\"onReply({comment: comment, $event: $event})\" on-show-replies=\"onShowReplies({comment: comment, $event: $event})\" on-hide-replies=\"onHideReplies({comment: comment, $event: $event})\"></sm-comments>',\n        ' </div>',\n        '</div>'\n      ].join('\\n'),\n\n      controller: 'SemanticCommentsController',\n\n      compile: SemanticUI.RecursiveCompiler()\n\n    };\n  }\n\n  function SemanticCommentsController($scope)\n  {\n    $scope.setCollapsed = function(comment, $event, collapse)\n    {\n      var $ = {comment: comment, $event: $event};\n\n      if ( comment.$isCollapsed != collapse )\n      {\n        if ( comment.$isCollapsed )\n        {\n          if ( $scope.onShowReplies($) !== false )\n          {\n            comment.$isCollapsed = false;\n          }\n        }\n        else\n        {\n          if ( $scope.onHideReplies($) !== false )\n          {\n            comment.$isCollapsed = true;\n          }\n        }\n      }\n    };\n\n    $scope.hasReplies = function($)\n    {\n      if ( !$scope.reply )\n      {\n        return false;\n      }\n\n      var replies = $scope.replies($);\n\n      return replies && replies.length;\n    };\n\n    $scope.getReplyCount = function($)\n    {\n      if ( !$scope.reply )\n      {\n        return false;\n      }\n\n      var replies = $scope.replies($);\n\n      return replies ? replies.length : 0;\n    };\n\n    $scope.getShowRepliesText = function($)\n    {\n      var count = $scope.getReplyCount($);\n\n      return count === 0 ? '' : (count === 1 ? 'Show Reply' : 'Show Replies (' + count + ')');\n    };\n\n    $scope.getHideRepliesText = function($)\n    {\n      var count = $scope.getReplyCount($);\n\n      return count === 0 ? '' : (count === 1 ? 'Hide Reply' : 'Hide Replies (' + count + ')');\n    };\n  }\n\n})( angular.module('semantic-ui-comment', ['semantic-ui-core', 'semantic-ui-timeago']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticDimmerLink', ['SemanticUI', SemanticDimmerLink])\n    .directive('smDimmerBind', ['SemanticUI', SemanticDimmerBind])\n    .directive('smDimmer', ['SemanticDimmerLink', SemanticDimmer])\n  ;\n\n  var BEHAVIORS = {\n    smDimmerShow:           'show',\n    smDimmerHide:           'hide',\n    smDimmerToggle:         'toggle'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'dimmer', method );\n    }]);\n  });\n\n  function SemanticDimmerBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smDimmerBind', 'dimmer' );\n  }\n\n  function SemanticDimmer(SemanticDimmerLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Optional */\n        visible: '=',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onShow: '=',\n        onHide: '=',\n        onChange: '='\n      },\n\n      template: '<div class=\"ui dimmer\" ng-transclude></div>',\n\n      link: SemanticDimmerLink\n    };\n  }\n\n  function SemanticDimmerLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      var settings = scope.settings || {};\n\n      SemanticUI.linkSettings( scope, element, attributes, 'dimmer' );\n\n      // If the visible attribute is specified, listen to onHide and update modal when variable changes.\n      if ( attributes.visible )\n      {\n        var visibleWatcher = SemanticUI.watcher( scope, 'visible',\n          function(updated) {\n            element.dimmer( updated ? 'show' : 'hide' );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onShow',\n          function(value) {\n            visibleWatcher.set( true );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onHide',\n          function(value) {\n            visibleWatcher.set( false );\n          }\n        );\n      }\n\n      SemanticUI.linkEvents( scope, settings, $.fn.dimmer.settings, {\n        onShow:   'onShow',\n        onHide:   'onHide',\n        onChange: 'onChange'\n      });\n\n      element.dimmer( settings );\n\n      if ( angular.isFunction( scope.onInit ) ) {\n        scope.onInit( element );\n      }\n    };\n  }\n\n})( angular.module('semantic-ui-dimmer', ['semantic-ui-core']) );\n","(function(app)\n{\n\n\tapp\n\t\t\t.controller('SemanticDropdownController', ['$scope', SemanticDropdownController])\n\t\t\t.factory('SemanticDropdownLink', ['SemanticUI', '$timeout', SemanticDropdownLink])\n\t\t\t.directive('smDropdownBind', ['SemanticUI', SemanticDropdownBind])\n\t\t\t.directive('smDropdown', ['SemanticDropdownLink', SemanticDropdown])\n\t;\n\n\tvar BEHAVIORS = {\n\t\tsmDropdownToggle:               'toggle',\n\t\tsmDropdownShow:                 'show',\n\t\tsmDropdownHide:                 'hide',\n\t\tsmDropdownClear:                'clear',\n\t\tsmDropdownHideOthers:           'hide others',\n\t\tsmDropdownRestoreDefaults:      'restore defaults',\n\t\tsmDropdownRestoreDefaultText:   'restore default text',\n\t\tsmDropdownRestoreDefaultValue:  'restore default value',\n\t\tsmDropdownSaveDefaults:         'save defaults',\n\t\tsmDropdownSetSelected:          'set selected',\n\t\tsmDropdownSetText:              'set text',\n\t\tsmDropdownSetValue:             'set value',\n\t\tsmDropdownBindTouchEvents:      'bind touch events',\n\t\tsmDropdownMouseEvents:          'mouse events',\n\t\tsmDropdownBindIntent:           'bind intent',\n\t\tsmDropdownUnbindIntent:         'unbind intent',\n\t\tsmDropdownSetActive:            'set active',\n\t\tsmDropdownSetVisible:           'set visible',\n\t\tsmDropdownRemoveActive:         'remove active',\n\t\tsmDropdownRemoveVisible:        'remove visible'\n\t};\n\n\tangular.forEach( BEHAVIORS, function(method, directive)\n\t{\n\t\tapp.directive( directive, ['SemanticUI', function(SemanticUI)\n\t\t{\n\t\t\treturn SemanticUI.createBehavior( directive, 'dropdown', method );\n\t\t}]);\n\t});\n\n\tfunction SemanticDropdownBind(SemanticUI)\n\t{\n\t\treturn SemanticUI.createBind( 'smDropdownBind', 'dropdown' );\n\t}\n\n\tfunction SemanticDropdown(SemanticDropdownLink)\n\t{\n\t\treturn {\n\n\t\t\trestrict: 'E',\n\n\t\t\treplace: true,\n\n\t\t\ttransclude: true,\n\n\t\t\tscope: {\n\t\t\t\t/* Required */\n\t\t\t\tmodel: '=',\n\t\t\t\titems: '=',\n\t\t\t\tdisabledItems: '=',\n\t\t\t\tlabel: '&',\n\t\t\t\tvalue: '&',\n\t\t\t\t/* Optional */\n\t\t\t\tsettings: '=',\n\t\t\t\tdefaultText: '=',\n\t\t\t\tonInit: '=',\n\t\t\t\temptyValue: '=',\n\t\t\t\t/* Events */\n\t\t\t\tonChange: '=',\n\t\t\t\tonAdd: '=',\n\t\t\t\tonRemove: '=',\n\t\t\t\tonLabelCreate: '=',\n\t\t\t\tonLabelSelect: '=',\n\t\t\t\tonNoResults: '=',\n\t\t\t\tonShow: '=',\n\t\t\t\tonHide: '='\n\t\t\t},\n\n\t\t\ttemplate: [\n\t\t\t\t'<div class=\"ui dropdown\">',\n\t\t\t\t'<i class=\"dropdown icon\"></i>',\n\t\t\t\t'<div class=\"text\" ng-class=\"::{default: hasDefault()}\" sm-html=\"::getDefaultText()\"></div>',\n\t\t\t\t'<sm-flat-menu></sm-flat-menu>',\n\t\t\t\t'</div>'\n\t\t\t].join('\\n'),\n\n\t\t\tcontroller: 'SemanticDropdownController',\n\n\t\t\tlink: SemanticDropdownLink\n\t\t};\n\t}\n\n\tfunction SemanticDropdownController($scope)\n\t{\n\t\tvar hashMap = {};\n\n\t\t$scope.getDisabled = function (item) {\n\t\t\treturn !!~$scope.disabledItems.indexOf(item);\n\t\t};\n\n\t\t// Returns the value to be placed in the data-value attribute. If the computed value has a $$hashKey,\n\t\t// then return the hashKey. This enables the exact instance of the item to be set to the model.\n\t\t$scope.getValue = function(item)\n\t\t{\n\t\t\t// Computes the value given the expression in the 'value' attribute\n\t\t\treturn $scope.getKey( $scope.value( {item: item} ) );\n\t\t};\n\n\t\t$scope.getKey = function(value)\n\t\t{\n\t\t\treturn (value ? value.$$hashKey || value : value) + '';\n\t\t};\n\n\t\t$scope.isEmpty = function()\n\t\t{\n\t\t\treturn !$scope.model || $scope.model.length === 0;\n\t\t};\n\n\t\t// Translates the value (the model, an item of the model, or a variable\n\t\t// created from the value function) into the key that's stored on the dropdown.\n\t\t$scope.translateValue = function(value)\n\t\t{\n\t\t\tvar translated = $scope.getKey( value );\n\t\t\tvar matching = $scope.findMatchingItem( translated );\n\n\t\t\tif ( angular.isDefined( matching ) )\n\t\t\t{\n\t\t\t\treturn $scope.getValue( matching );\n\t\t\t}\n\t\t};\n\n\t\t// Determines whether this dropdown should currently display the default text.\n\t\t$scope.hasDefault = function()\n\t\t{\n\t\t\treturn ( $scope.defaultText && $scope.isEmpty() );\n\t\t};\n\n    // Gets the current text for the drop down. If the current model has a value which is found\n    // in the items, the appropriate item's label is displayed. Otherwise return the default text.\n    $scope.getDefaultText = function()\n    {\n      var defaultText = $scope.defaultText ? $scope.defaultText : '';\n      return ( $scope.isEmpty() ? defaultText : $scope.translateValue($scope.findMatchingItem($scope.model)) );\n    };\n\n\t\t// Finds an item instance that has the exact same value as the given value.\n\t\t$scope.findMatchingItem = function(value)\n\t\t{\n\t\t\treturn hashMap[ value ];\n\t\t};\n\n\t\t// Updates the hash map providing a mapping from values to items.\n\t\t$scope.updateHashMap = function( items )\n\t\t{\n\t\t\thashMap = {};\n\n\t\t\tangular.forEach( items, function(item)\n\t\t\t{\n\t\t\t\thashMap[ $scope.getValue( item ) ] = item;\n\t\t\t});\n\t\t};\n\t}\n\n  function SemanticDropdownLink(SemanticUI, $timeout)\n  {\n    return function (scope, element, attributes) {\n      var applyValue = function (value) {\n        $timeout(function () {\n          if (value === null) {\n            element.dropdown('clear');\n          } else if(value === false){\n            // Do nothing\n          }\n          else if (element.dropdown('is multiple')) {\n            if (value instanceof Array) {\n              var translatedValue = [];\n\n\t\t\t\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\t\t\t\tvar translated = scope.translateValue(value[ i ]);\n\n\t\t\t\t\t\t\t\tif (angular.isDefined(translated)) {\n\t\t\t\t\t\t\t\t\ttranslatedValue.push(translated);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\telement.dropdown('set exactly', translatedValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\telement.dropdown('set selected', scope.translateValue(value));\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t};\n\n\t\t\tSemanticUI.setDefaultFunction( scope, 'label', attributes, function(locals){return locals.item} );\n\t\t\tSemanticUI.setDefaultFunction( scope, 'value', attributes, function(locals){return locals.item} );\n\n\t\t\telement.ready(function()\n\t\t\t{\n\t\t\t\tvar settings = scope.settings || {};\n\t\t\t\tvar ignoreChange = true;\n\n\t\t\t\tSemanticUI.linkSettings( scope, element, attributes, 'dropdown', true );\n\n\t\t\t\tSemanticUI.triggerChange( scope, 'model', element, true );\n\n\t\t\t\t// Returns the model on the scope, converting it to an array if it's not one.\n\t\t\t\tvar modelArray = function() {\n\t\t\t\t\tif ( !(scope.model instanceof Array) ) {\n\t\t\t\t\t\tscope.model = scope.model ? [ scope.model ] : [];\n\t\t\t\t\t}\n\t\t\t\t\treturn scope.model;\n\t\t\t\t};\n\n\t\t\t\t// When the model changes, set the value on the drop down\n\t\t\t\tvar modelWatcher = SemanticUI.watcher( scope, 'model',\n\t\t\t\t\t\tfunction(updated) {\n\t\t\t\t\t\t\tapplyValue( updated );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t, null, true, true );\n\n\t\t\t\t// Inject an onChange function into the settings which sets the model value\n\t\t\t\t// and causes the scope to be updated.\n\t\t\t\tSemanticUI.onEvent( settings, 'onChange',\n\t\t\t\t\t\tfunction(value) {\n\t\t\t\t\t\t\tif ( ignoreChange ) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( !element.dropdown('is multiple') ) {\n\t\t\t\t\t\t\t\tvar mapped = scope.findMatchingItem( value );\n\t\t\t\t\t\t\t\tif (angular.isDefined(mapped)) {\n\t\t\t\t\t\t\t\t\tvar mappedValue = scope.value({item: mapped});\n\t\t\t\t\t\t\t\t\tmodelWatcher.set( mappedValue );\n\t\t\t\t\t\t\t\t} else if ( element.dropdown('setting', 'allowAdditions') ) {\n\t\t\t\t\t\t\t\t\tmodelWatcher.set( value );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmodelWatcher.set( scope.emptyValue );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// When a new item is selected for multiple selection dropdowns, add it to the model.\n\t\t\t\tSemanticUI.onEvent( settings, 'onAdd',\n\t\t\t\t\t\tfunction(value) {\n\t\t\t\t\t\t\tif ( ignoreChange ) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar mapped = scope.findMatchingItem( value );\n\t\t\t\t\t\t\tif (angular.isDefined(mapped)) {\n\t\t\t\t\t\t\t\tvar mappedValue = scope.value({item: mapped});\n\t\t\t\t\t\t\t\tvar indexOf = $.inArray( mappedValue, modelArray() );\n\t\t\t\t\t\t\t\tif ( indexOf === -1 ) {\n\t\t\t\t\t\t\t\t\tscope.model.push( mappedValue );\n\t\t\t\t\t\t\t\t\tmodelWatcher.update();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( element.dropdown('setting', 'allowAdditions') ) {\n\t\t\t\t\t\t\t\t!~scope.model.indexOf(value) && scope.model.push( value );\n\t\t\t\t\t\t\t\tmodelWatcher.update();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// When an item is deselected for multiple selection dropdowns, remove it from the model.\n\t\t\t\tSemanticUI.onEvent( settings, 'onRemove',\n\t\t\t\t\t\tfunction(value) {\n\t\t\t\t\t\t\tif ( ignoreChange ) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar mapped = scope.findMatchingItem( value );\n\t\t\t\t\t\t\tif (angular.isDefined(mapped)) {\n\t\t\t\t\t\t\t\tvar mappedValue = scope.value({item: mapped});\n\t\t\t\t\t\t\t\tvar indexOf = $.inArray( mappedValue, modelArray() );\n\t\t\t\t\t\t\t\tif ( indexOf !== -1 ) {\n\t\t\t\t\t\t\t\t\tscope.model.splice( indexOf, 1 );\n\t\t\t\t\t\t\t\t\tmodelWatcher.update();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar indexOf = $.inArray( value, modelArray() );\n\t\t\t\t\t\t\t\tif ( indexOf !== -1 ) {\n\t\t\t\t\t\t\t\t\tscope.model.splice( indexOf, 1 );\n\t\t\t\t\t\t\t\t\tmodelWatcher.update();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tSemanticUI.linkEvents( scope, settings, $.fn.dropdown.settings, {\n\t\t\t\t\tonChange:       'onChange',\n\t\t\t\t\tonAdd:          'onAdd',\n\t\t\t\t\tonRemove:       'onRemove',\n\t\t\t\t\tonLabelCreate:  'onLabelCreate',\n\t\t\t\t\tonLabelSelect:  'onLabelSelect',\n\t\t\t\t\tonNoResults:    'onNoResults',\n\t\t\t\t\tonShow:         'onShow',\n\t\t\t\t\tonHide:         'onHide'\n\t\t\t\t});\n\n\t\t\t\t// When items changes, rebuild the hashMap & reapply the values.\n\t\t\t\tscope.$watch( 'items', function( updated )\n\t\t\t\t{\n\t\t\t\t\tscope.updateHashMap( scope.items );\n\t\t\t\t\tapplyValue( scope.model );\n\n\t\t\t\t}, true );\n\n\t\t\t\t// Initialize the element with the given settings.\n\t\t\t\telement.dropdown( settings );\n\n\t\t\t\t// Update the hashmap with items\n\t\t\t\tscope.updateHashMap( scope.items );\n\n\t\t\t\t// Apply current value\n\t\t\t\tapplyValue( scope.model );\n\n\t\t\t\t// Save defaults\n\t\t\t\telement.dropdown( 'save defaults' );\n\n\t\t\t\t// Stop ignoring changes!\n\t\t\t\tignoreChange = false;\n\n\t\t\t\t// Notify initialized callback.\n\t\t\t\tif ( angular.isFunction( scope.onInit ) )\n\t\t\t\t{\n\t\t\t\t\tscope.onInit( element );\n\t\t\t\t}\n\n\t\t\t});\n\t\t};\n\t}\n\n})( angular.module('semantic-ui-dropdown', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticEmbedLink', ['SemanticUI', SemanticEmbedLink])\n    .directive('smEmbedBind', ['SemanticUI', SemanticEmbedBind])\n    .directive('smEmbed', ['SemanticEmbedLink', SemanticEmbed])\n  ;\n\n  var BEHAVIORS = {\n    smEmbedReset:     'reset',\n    smEmbedShow:      'show',\n    smEmbedHide:      'hide',\n    smEmbedDestroy:   'destroy'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'embed', method );\n    }]);\n  });\n\n  function SemanticEmbedBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smEmbedBind', 'embed' );\n  }\n\n  function SemanticEmbed(SemanticEmbedLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Optional */\n        source: '@',\n        sourceId: '@',\n        url: '@',\n        placeholder: '@',\n        icon: '@',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onCreate: '=',\n        onDisplay: '=',\n        onPlaceholderDisplay: '=',\n        onEmbed: '='\n      },\n\n      template: '<div class=\"ui embed\"></div>',\n\n      link: SemanticEmbedLink\n    };\n  }\n\n  function SemanticEmbedLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      var settings = scope.settings || {};\n\n      SemanticUI.linkSettings( scope, element, attributes, 'embed' );\n\n      if ( scope.source ) settings.source = scope.source;\n      if ( scope.sourceId ) settings.id = scope.sourceId;\n      if ( scope.placeholder ) settings.placeholder = scope.placeholder;\n      if ( scope.icon ) settings.icon = scope.icon;\n      if ( scope.url ) settings.url = scope.url;\n\n      SemanticUI.linkEvents( scope, settings, $.fn.embed.settings, {\n        onCreate:             'onCreate',\n        onDisplay:            'onDisplay',\n        onPlaceholderDisplay: 'onPlaceholderDisplay',\n        onEmbed:              'onEmbed'\n      });\n\n      element.embed( settings );\n\n      if ( angular.isFunction( scope.onInit ) ) {\n        scope.onInit( element );\n      }\n    };\n  }\n\n\n})( angular.module('semantic-ui-embed', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticListLink', ['SemanticUI', SemanticListLink])\n    .directive('smList', ['SemanticUI', 'SemanticListLink', SemanticList])\n  ;\n\n  function SemanticList(SemanticUI, SemanticListLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      scope:\n      {\n        /* Required */\n        items: '=',\n        /* Optional */\n        description: '&',\n        icon: '&',\n        image: '&',\n        header: '&',\n        headerHref: '&',\n        children: '&',\n        onHeader: '&',\n        /* Private */\n        has: '=?'\n      },\n\n      template: [\n        '<div class=\"ui list\">',\n        ' <div class=\"item\" ng-repeat=\"i in items\" ng-init=\"$ = {item: i}\">',\n        '   <i ng-if=\"has.icon\" class=\"icon {{ icon($) }}\"></i>',\n        '   <img ng-if=\"has.image\" class=\"ui avatar image\" ng-src=\"{{ image($) }}\">',\n        '   <div ng-if=\"has.header || has.children\" class=\"content\">',\n        '     <div ng-if=\"!has.headerLink\" class=\"header\" sm-html=\"header($)\"></div>',\n        '     <a ng-if=\"has.headerLink\" class=\"header\" ng-href=\"{{ headerHref($) }}\" ng-click=\"onHeader($)\" sm-html=\"header($)\"></a>',\n        '     <div class=\"description\" sm-html=\"description($)\"></div>',\n        '     <sm-list ng-if=\"has.children && getChildCount($)\" has=\"has\" items=\"children($)\" description=\"description({item: item})\" icon=\"icon({item: item})\" header=\"header({item: item})\" header-href=\"headerHref({item: item})\" children=\"children({item: item})\" on-header=\"onHeader({item: item})\"></sm-list>',\n        '   </div>',\n        '   <div ng-if=\"!has.header && !has.children\" class=\"content\" sm-html=\"description($)\"></div>',\n        ' </div>',\n        '</div>'\n      ].join('\\n'),\n\n      compile: SemanticUI.RecursiveCompiler(SemanticListLink)\n    }\n  }\n\n  function SemanticListLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      if ( !scope.has )\n      {\n        scope.has = {\n          icon:         !!attributes.icon,\n          image:        !!attributes.image,\n          header:       !!attributes.header,\n          headerLink:   !!attributes.headerHref,\n          description:  !!attributes.description,\n          children:     !!attributes.children\n        };\n      }\n\n      scope.getChildCount = function($)\n      {\n        var children = scope.children($);\n\n        return children ? children.length : 0;\n      };\n\n      SemanticUI.setDefaultFunction( scope, 'description', attributes, function(locals){return locals.item} );\n      SemanticUI.setDefaultFunction( scope, 'icon', attributes, function(locals){return locals.item.icon} );\n      SemanticUI.setDefaultFunction( scope, 'header', attributes, function(locals){return locals.item.header} );\n      SemanticUI.setDefaultFunction( scope, 'children', attributes, function(locals){return locals.item.children} );\n    };\n  }\n\n})( angular.module('semantic-ui-list', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .controller('SemanticMenuController', ['$scope', SemanticMenuController])\n    .directive('smMenu', ['SemanticUI', SemanticMenu])\n  ;\n\n  function SemanticMenu(SemanticUI)\n  {\n    return {\n      restrict: 'E',\n      replace: true,\n      scope: {\n        /* Required */\n        items: '=',\n        label: '&',\n        /* Optional */\n        onClick: '&',\n        children: '&',\n        description: '&',\n        icon: '&',\n        hidden: '&',\n        divider: '&'\n      },\n      template: [\n        '<div class=\"menu\">',\n          '<div ng-repeat=\"i in items\" ng-hide=\"isHidden( i )\" ng-class=\"{item: !isDivider( i ), divider: isDivider( i )}\" ng-click=\"onClick({item: i, $event:$event})\">',\n            '<i class=\"{{ getIcon( i ) }} icon\" ng-if=\"getIcon( i )\"></i>',\n            '<span class=\"description\" ng-if=\"getDescription( i )\">{{ getDescription( i ) }}</span>',\n            '{{ getLabel( i ) }}',\n            '<sm-menu ng-if=\"hasChildren( i )\" items=\"getChildren( i )\" label=\"getLabel( item )\" children=\"getChildren( item )\" description=\"getDescription( item )\" icon=\"getIcon( item )\" hidden=\"isHidden( item )\" divider=\"isDivider( item )\" on-click=\"onClick({item: item, $event: $event})\"></sm-menu>',\n          '</div>',\n        '</div>'\n      ].join('\\n'),\n\n      controller: 'SemanticMenuController',\n\n      compile: SemanticUI.RecursiveCompiler()\n    };\n  }\n\n  function SemanticMenuController($scope)\n  {\n    $scope.hasChildren = function(item) {\n      var children = $scope.children({item: item});\n      return children && children.length;\n    };\n    $scope.getChildren = function(item) {\n      return $scope.children({item: item});\n    };\n\n    $scope.getLabel = function(item) {\n      return $scope.label({item: item});\n    };\n    $scope.getIcon = function(item) {\n      return $scope.icon({item: item});\n    }\n    $scope.getDescription = function(item) {\n      return $scope.description({item: item});\n    };\n    $scope.isHidden = function(item) {\n      return $scope.hidden({item: item});\n    };\n    $scope.isDivider = function(item) {\n      return $scope.divider({item: item});\n    };\n  }\n\n\n})( angular.module('semantic-ui-menu', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticModalLink', ['SemanticUI', SemanticModalLink])\n    .directive('smModalBind', ['SemanticUI', SemanticModalBind])\n    .directive('smModal', ['SemanticModalLink', SemanticModal])\n  ;\n\n  var BEHAVIORS = {\n    smModalShow:        'show',\n    smModalHide:        'hide',\n    smModalToggle:      'toggle',\n    smModalRefresh:     'refresh',\n    smModalShowDimmer:  'show dimmer',\n    smModalHideDimmer:  'hide dimmer',\n    smModalHideOthers:  'hide others',\n    smModalHideAll:     'hide all',\n    smModalCacheSizes:  'cache sizes',\n    smModalSetActive:   'set active'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'modal', method );\n    }]);\n  });\n\n  function SemanticModalBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smModalBind', 'modal' );\n  }\n\n  function SemanticModal(SemanticModalLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Optional */\n        visible: '=',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onShow: '=',\n        onVisible: '=',\n        onHide: '=',\n        onHidden: '=',\n        onApprove: '=',\n        onDeny: '='\n      },\n\n      template: '<div class=\"ui modal\" ng-transclude></div>',\n\n      link: SemanticModalLink\n    }\n  }\n\n  function SemanticModalLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      var settings = scope.settings || {};\n\n      SemanticUI.linkSettings( scope, element, attributes, 'modal' );\n\n      // If the visible attribute is specified, listen to onHide and update modal when variable changes.\n      if ( attributes.visible )\n      {\n        var visibleWatcher = SemanticUI.watcher( scope, 'visible',\n          function(updated) {\n            element.modal( updated ? 'show' : 'hide' );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onHide',\n          function() {\n            visibleWatcher.set( false );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onShow',\n          function() {\n            visibleWatcher.set( true );\n          }\n        );\n      }\n\n      SemanticUI.linkEvents( scope, settings, $.fn.modal.settings, {\n        onShow:    'onShow',\n        onVisible: 'onVisible',\n        onHide:    'onHide',\n        onHidden:  'onHidden',\n        onApprove: 'onApprove',\n        onDeny:    'onDeny'\n      });\n\n      // Initialize the element with the given settings.\n      element.modal( settings );\n\n      if ( angular.isFunction( scope.onInit ) ) {\n        scope.onInit( element );\n      }\n    };\n  }\n\n})( angular.module('semantic-ui-modal', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticPopupLink', ['SemanticUI', SemanticPopupLink])\n    .factory('SemanticPopupInlineLink', ['SemanticUI', SemanticPopupInlineLink])\n    .factory('SemanticPopupDisplayLink', ['SemanticUI', SemanticPopupDisplayLink])\n    .directive('smPopupBind', ['SemanticUI', SemanticModalBind])\n    .directive('smPopup', ['SemanticPopupLink', SemanticPopup])\n    .directive('smPopupInline', ['SemanticPopupInlineLink', SemanticPopupInline])\n    .directive('smPopupDisplay', ['SemanticPopupDisplayLink', SemanticPopupDisplay])\n    .directive('smPopupDetached', [SemanticPopupDetached])\n  ;\n\n  var BEHAVIORS = {\n    smPopupShow:        'show',\n    smPopupHide:        'hide',\n    smPopupHideAll:     'hide all',\n    smPopupToggle:      'toggle',\n    smPopupReposition:  'reposition',\n    smPopupDestroy:     'destroy',\n    smPopupRemove:      'remove popup'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'popup', method );\n    }]);\n  });\n\n  function SemanticModalBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smPopupBind', 'popup' );\n  }\n\n  // An attribute directive which displays a popup for this element.\n  function SemanticPopup(SemanticPopupLink)\n  {\n    return {\n\n      restrict: 'A',\n\n      scope: {\n        /* Required */\n        smPopup: '=',\n        /* Optional */\n        smPopupTitle: '=',\n        smPopupHtml: '=',\n        smPopupPosition: '@',\n        smPopupVariation: '@',\n        smPopupSettings: '=',\n        smPopupOnInit: '=',\n        /* Events */\n        smPopupOnCreate: '=',\n        smPopupOnRemove: '=',\n        smPopupOnShow: '=',\n        smPopupOnVisible: '=',\n        smPopupOnHide: '=',\n        smPopupOnHidden: '='\n      },\n\n      link: SemanticPopupLink\n    };\n  }\n\n  function SemanticPopupLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      var settings = scope.smPopupSettings || {};\n\n      SemanticUI.linkSettings( scope, element, attributes, 'popup', false, 'smPopupSettings' );\n\n      SemanticUI.bindAttribute( scope, 'smPopup', element, 'data-content' );\n      SemanticUI.bindAttribute( scope, 'smPopupTitle', element, 'data-title' );\n      SemanticUI.bindAttribute( scope, 'smPopupHtml', element, 'data-html' );\n      SemanticUI.bindAttribute( scope, 'smPopupPosition', element, 'data-position' );\n      SemanticUI.bindAttribute( scope, 'smPopupVariation', element, 'data-variation' );\n\n      SemanticUI.linkEvents( scope, settings, {\n        onCreate:  'smPopupOnCreate',\n        onRemove:  'smPopupOnRemove',\n        onShow:    'smPopupOnShow',\n        onVisible: 'smPopupOnVisible',\n        onHide:    'smPopupOnHide',\n        onHidden:  'smPopupOnHidden'\n      });\n\n      element.popup( settings );\n\n      if ( angular.isFunction( scope.smPopupOnInit ) )\n      {\n        scope.smPopupOnInit( element );\n      }\n    };\n  }\n\n  // An attribute directive to show the detached popup which follows this element.\n  function SemanticPopupInline(SemanticPopupInlineLink)\n  {\n    return {\n\n      restrict: 'A',\n\n      scope: {\n        /* Optional */\n        smPopupInline: '=',\n        smPopupInlineOnInit: '=',\n        /* Events */\n        smPopupInlineOnCreate: '=',\n        smPopupInlineOnRemove: '=',\n        smPopupInlineOnShow: '=',\n        smPopupInlineOnVisible: '=',\n        smPopupInlineOnHide: '=',\n        smPopupInlineOnHidden: '='\n      },\n\n      link: SemanticPopupInlineLink\n    };\n  }\n\n  function SemanticPopupInlineLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      var settings = scope.smPopupInline || {};\n\n      SemanticUI.linkSettings( scope, element, attributes, 'popup', false, 'smPopupInline' );\n\n      SemanticUI.linkEvents( scope, settings, {\n        onCreate:  'smPopupInlineOnCreate',\n        onRemove:  'smPopupInlineOnRemove',\n        onShow:    'smPopupInlineOnShow',\n        onVisible: 'smPopupInlineOnVisible',\n        onHide:    'smPopupInlineOnHide',\n        onHidden:  'smPopupInlineOnHidden'\n      });\n\n      settings.inline = true;\n\n      element.popup( settings );\n\n      if ( angular.isFunction( scope.smPopupInlineOnInit ) ) {\n        scope.smPopupInlineOnInit( element );\n      }\n    };\n  }\n\n  // An attribute directive to show a detached popup over this element given it's name.\n  function SemanticPopupDisplay(SemanticPopupDisplayLink)\n  {\n    return {\n\n      restrict: 'A',\n\n      scope: {\n        /* Required */\n        smPopupDisplay: '@',\n        /* Optional */\n        smPopupDisplaySettings: '=',\n        smPopupDisplayOnInit: '=',\n        /* Events */\n        smPopupDisplayOnCreate: '=',\n        smPopupDisplayOnRemove: '=',\n        smPopupDisplayOnShow: '=',\n        smPopupDisplayOnVisible: '=',\n        smPopupDisplayOnHide: '=',\n        smPopupDisplayOnHidden: '='\n      },\n\n      link: SemanticPopupDisplayLink\n    };\n  }\n\n  function SemanticPopupDisplayLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      var settings = scope.smPopupDisplaySettings || {};\n\n      SemanticUI.linkSettings( scope, element, attributes, 'popup', false, 'smPopupDisplaySettings' );\n\n      SemanticUI.linkEvents( scope, settings, $.fn.popup.settings, {\n        onCreate:  'smPopupDisplayOnCreate',\n        onRemove:  'smPopupDisplayOnRemove',\n        onShow:    'smPopupDisplayOnShow',\n        onVisible: 'smPopupDisplayOnVisible',\n        onHide:    'smPopupDisplayOnHide',\n        onHidden:  'smPopupDisplayOnHidden'\n      });\n\n      settings.popup = '[data-popup-named=\"' + attributes.smPopupDisplay + '\"]';\n\n      element.popup( settings );\n\n      if ( angular.isFunction( scope.smPopupDisplayOnInit ) ) {\n        scope.smPopupDisplayOnInit( element );\n      }\n    };\n  }\n\n  // An element directive for a popup, can be used after an element or can be named and used with sm-popup-display.\n  function SemanticPopupDetached()\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        name: '@'\n      },\n\n      template: '<div class=\"ui popup\" data-popup-named=\"{{ name }}\" ng-transclude></div>'\n    };\n  }\n\n})( angular.module('semantic-ui-popup', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticProgressLink', ['SemanticUI', SemanticProgressLink])\n    .directive('smProgressBind', ['SemanticUI', SemanticModalBind])\n    .directive('smProgress', ['SemanticProgressLink', SemanticProgress])\n  ;\n\n  var BEHAVIORS = {\n    'smProgressIncrement': 'increment'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'progress', method );\n    }]);\n  });\n\n  function SemanticModalBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smProgressBind', 'progress' );\n  }\n\n  function SemanticProgress(SemanticProgressLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Required */\n        model: '=',\n        /* Optional */\n        total: '=',\n        label: '@',\n        activeText: '@',\n        successText: '@',\n        errorText: '@',\n        warningText: '@',\n        duration: '@',\n        onInit: '=',\n        /* Events */\n        onChange: '=',\n        onSuccess: '=',\n        onActive: '=',\n        onError: '=',\n        onWarning: '='\n      },\n\n      template: [\n        '<div class=\"ui progress\">',\n        '  <div class=\"bar\">',\n        '    <div class=\"progress\" ng-show=\"label\"></div>',\n        '  </div>',\n        '  <div class=\"label\" ng-transclude></div>',\n        '</div>'\n      ].join('\\n'),\n\n      link: SemanticProgressLink\n    };\n  }\n\n  function SemanticProgressLink(SemanticUI)\n  {\n    var addText = function( scope, attributes, settings, attribute, property )\n    {\n      if ( angular.isDefined( attributes[ attribute ] ) )\n      {\n        settings.text = settings.text || {};\n        settings.text[ property ] = scope[ attribute ];\n      }\n    };\n\n    return function(scope, element, attributes)\n    {\n      var settings = scope.settings || {};\n\n      SemanticUI.linkSettings( scope, element, attributes, 'progress' );\n\n      SemanticUI.linkEvents( scope, settings, $.fn.progress.settings, {\n        onChange:   'onChange',\n        onSuccess:  'onSuccess',\n        onActive:   'onActive',\n        onError:    'onError',\n        onWarning:  'onWarning'\n      });\n\n      if ( !angular.isDefined( settings.showActivity ) )\n      {\n        settings.showActivity = false;\n      }\n\n      if ( angular.isDefined( attributes.label ) )\n      {\n        settings.label = scope.label;\n      }\n\n      if ( angular.isDefined( attributes.total ) )\n      {\n        settings.total = scope.total;\n      }\n      else\n      {\n        settings.total = 100;\n      }\n\n      if ( angular.isDefined( attributes.model ) )\n      {\n        settings.value = scope.model;\n      }\n\n      addText( scope, attributes, settings, 'activeText', 'active' );\n      addText( scope, attributes, settings, 'successText', 'success' );\n      addText( scope, attributes, settings, 'errorText', 'error' );\n      addText( scope, attributes, settings, 'warningText', 'warning' );\n\n      element.progress( settings );\n\n      SemanticUI.watcher( scope, 'model', function(value)\n      {\n        var total = element.progress( 'get total' ) || 100;\n\n        element.progress( 'set percent', value * 100 / total );\n        element.progress( 'set value', value );\n      });\n\n      if ( angular.isDefined( attributes.duration ) )\n      {\n        SemanticUI.watcher( scope, 'duration', function(duration)\n        {\n          element.progress( 'set duration', duration );\n        });\n      }\n\n      if ( angular.isDefined( attributes.total ) )\n      {\n        SemanticUI.watcher( scope, 'total', function(total)\n        {\n          element.progress( 'set total', total );\n        });\n      }\n\n      if ( angular.isFunction( scope.onInit ) )\n      {\n        scope.onInit( element );\n      }\n    };\n  }\n\n})( angular.module('semantic-ui-progress', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticRatingLink', ['SemanticUI', SemanticRatingLink])\n    .directive('smRatingBind', ['SemanticUI', SemanticRatingBind])\n    .directive('smRating', ['SemanticRatingLink', SemanticRating])\n  ;\n\n  var BEHAVIORS = {\n    smRatingSet:        'set rating',\n    smRatingDisable:    'disable',\n    smRatingEnable:     'enable',\n    smRatingClear:      'clear rating'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'rating', method );\n    }]);\n  });\n\n  function SemanticRatingBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smRatingBind', 'rating' );\n  }\n\n  function SemanticRating(SemanticRatingLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      scope: {\n        /* Required */\n        model: '=',\n        total: '=',\n        /* Optional */\n        type: '@',\n        disabled: '=',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onRate: '='\n      },\n\n      template: '<div class=\"ui rating {{ type }}\" data-rating=\"{{ model }}\" data-max-rating=\"{{ total }}\"></div>',\n\n      link: SemanticRatingLink\n    };\n  }\n\n  function SemanticRatingLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      element.ready(function()\n      {\n        var settings = scope.settings || {};\n\n        SemanticUI.linkSettings( scope, element, attributes, 'rating', true );\n\n        SemanticUI.triggerChange( scope, 'model', element, true );\n\n        if ( attributes.disabled )\n        {\n          var disabledWatcher = SemanticUI.watcher( scope, 'disabled',\n            function(updated) {\n              element.rating( updated ? 'disable' : 'enable' );\n            }\n          );\n        }\n\n        var valueWatcher = SemanticUI.watcher( scope, 'model',\n          function(updated) {\n            element.rating( 'set rating', updated );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onRate',\n          function(value) {\n            valueWatcher.set( value );\n          }\n        );\n\n        SemanticUI.linkEvents( scope, settings, $.fn.rating.settings, {\n          onRate: 'onRate'\n        });\n\n        element.rating( settings );\n\n        if ( scope.disabled )\n        {\n          element.rating( 'disable' );\n        }\n\n        if ( angular.isFunction( scope.onInit ) ) {\n          scope.onInit( element );\n        }\n      });\n    };\n  }\n\n})( angular.module('semantic-ui-rating', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticSearchLink', ['SemanticUI', SemanticSearchLink])\n    .directive('smSearchBind', ['SemanticUI', SemanticSearchBind])\n    .directive('smSearch', ['SemanticSearchLink', SemanticSearch])\n  ;\n\n  var BEHAVIORS = {\n    smSearchQuery:        'query',\n    smSearchCancelQuery:  'cancel query',\n    smSearchSearchLocal:  'search local',\n    smSearchSearchRemote: 'search remote',\n    smSearchSet:          'set value',\n    smSearchShowResults:  'show results',\n    smSearchHideResults:  'hide results',\n    smSearchDestroy:      'destroy'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'search', method );\n    }]);\n  });\n\n  function SemanticSearchBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smSearchBind', 'search' );\n  }\n\n  function SemanticSearch(SemanticSearchLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      scope: {\n        /* Required */\n        model: '=',\n        /* Optional */\n        text: '=?',\n        icon: '@',\n        placeholder: '@',\n        category: '@',\n        local: '=',\n        remote: '@',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onSelect: '=',\n        onResultsAdd: '=',\n        onSearchQuery: '=',\n        onResults: '=',\n        onResultsOpen: '=',\n        onResultsClose: '='\n      },\n\n      template: [\n        '<div class=\"ui search\" ng-class=\"{category: category}\">',\n        '  <div class=\"ui input\" ng-class=\"{icon: icon}\">',\n        '    <input class=\"prompt\" type=\"text\" placeholder=\"{{ placeholder }}\" ng-model=\"text\">',\n        '    <i ng-if=\"icon\" class=\"{{ icon }} icon\"></i>',\n        '  </div>',\n        '  <div class=\"results\"></div>',\n        '</div>'\n      ].join('\\n'),\n\n      link: SemanticSearchLink\n    };\n  }\n\n  function SemanticSearchLink(SemanticUI)\n  {\n    var defaultTitle = $.fn.search && $.fn.search.settings && $.fn.search.settings.fields ? $.fn.search.settings.fields.title : '';\n\n    return function(scope, element, attributes)\n    {\n      var settings = scope.settings || {};\n      var textProperty = settings.fields && settings.fields.title ? settings.fields.title : defaultTitle;\n\n      SemanticUI.linkSettings( scope, element, attributes, 'search' );\n\n      if ( scope.local ) settings.source = scope.local;\n      if ( scope.remote ) settings.apiSettings = { url: scope.remote };\n      if ( scope.category ) settings.type = 'category';\n\n      var modelWatcher = SemanticUI.watcher( scope, 'model',\n        function(value) {\n          element.search( 'set value', value && (textProperty in value) ? value[ textProperty ] : value );\n        }\n      );\n\n      SemanticUI.onEvent( settings, 'onSelect',\n        function(result, response) {\n          modelWatcher.set( result );\n          if ( attributes.text ) {\n            scope.$evalAsync(function() {\n              scope.text = result[ textProperty ];\n            });\n          }\n        }\n      );\n\n      SemanticUI.linkEvents( scope, settings, $.fn.search.settings, {\n        onSelect:         'onSelect',\n        onResultsAdd:     'onResultsAdd',\n        onSearchQuery:    'onSearchQuery',\n        onResults:        'onResults',\n        onResultsOpen:    'onResultsOpen',\n        onResultsClose:   'onResultsClose'\n      });\n\n      element.search( settings );\n\n      if ( angular.isFunction( scope.onInit ) ) {\n        scope.onInit( element );\n      }\n\n      if ( scope.model && attributes.text && textProperty in scope.model ) {\n        scope.text = scope.model[ textProperty ];\n      }\n    };\n  }\n\n})( angular.module('semantic-ui-search', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticShapeLink', ['SemanticUI', SemanticShapeLink])\n    .directive('smShapeBind', ['SemanticUI', SemanticShapeBind])\n    .directive('smShape', ['SemanticShapeLink', SemanticShape])\n  ;\n\n  var BEHAVIORS = {\n    smShapeFlipUp:          'flip up',\n    smShapeFlipDown:        'flip down',\n    smShapeFlipLeft:        'flip left',\n    smShapeFlipRight:       'flip right',\n    smShapeFlipOver:        'flip over',\n    smShapeFlipBack:        'flip back',\n    smShapeSetNextSide:     'set next side',\n    smShapeReset:           'reset',\n    smShapeQueue:           'queue',\n    smShapeRepaint:         'repaint',\n    smShapeSetDefaultSide:  'set default side',\n    smShapeSetStageSize:    'set stage size',\n    smShapeRefresh:         'refresh'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'shape', method );\n    }]);\n  });\n\n  function SemanticShapeBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smShapeBind', 'shape' );\n  }\n\n  function SemanticShape(SemanticShapeLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onBeforeChange: '=',\n        onChange: '=',\n      },\n\n      template: [\n        '<div class=\"ui shape\">',\n        ' <div class=\"sides\" ng-transclude>',\n        ' </div>',\n        '</div>'\n      ].join('\\n'),\n\n      link: SemanticShapeLink\n\n    };\n  }\n\n  function SemanticShapeLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      var settings = scope.settings || {};\n\n      SemanticUI.linkSettings( scope, element, attributes, 'shape' );\n\n      SemanticUI.linkEvents( scope, settings, $.fn.shape.settings, {\n        onBeforeChange:   'onBeforeChange',\n        onChange:         'onChange'\n      });\n\n      element.shape( settings );\n\n      if ( angular.isFunction( scope.onInit ) ) {\n        scope.onInit( element );\n      }\n    };\n  }\n\n})( angular.module('semantic-ui-shape', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticSidebarLink', ['SemanticUI', SemanticSidebarLink])\n    .directive('smSidebarBind', ['SemanticUI', SemanticSidebarBind])\n    .directive('smSidebar', ['SemanticSidebarLink', SemanticSidebar])\n  ;\n\n  var BEHAVIORS = {\n    smSidebarShow:           'show',\n    smSidebarHide:           'hide',\n    smSidebarToggle:         'toggle',\n    smSidebarPushPage:       'push page',\n    smSidebarPullPage:       'pull page',\n    smSidebarAddBodyCss:     'add body css',\n    smSidebarRemoveBodyCss:  'remove body css'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'sidebar', method );\n    }]);\n  });\n\n  function SemanticSidebarBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smSidebarBind', 'sidebar' );\n  }\n\n  function SemanticSidebar(SemanticSidebarLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      scope: {\n        /* Required */\n        items: '=',\n        label: '&',\n        /* Optional */\n        onClick: '&',\n        visible: '=',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onVisible: '=',\n        onShow: '=',\n        onChange: '=',\n        onHide: '=',\n        onHidden: '='\n      },\n\n      template: [\n        '<div class=\"ui sidebar\">',\n        ' <a class=\"item\" ng-repeat=\"i in items\" sm-html=\"label({item:i})\" ng-click=\"onClick({item:i, $event:$event})\"></a>',\n        '</div>'\n      ].join('\\n'),\n\n      link: SemanticSidebarLink\n    };\n  }\n\n  function SemanticSidebarLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      var settings = scope.settings || {};\n\n      SemanticUI.setDefaultFunction( scope, 'label', attributes, function(locals){return locals.item} );\n\n      SemanticUI.linkSettings( scope, element, attributes, 'sidebar' );\n\n      if ( attributes.visible )\n      {\n        var visibleWatcher = SemanticUI.watcher( scope, 'visible',\n          function(updated) {\n            element.sidebar( updated ? 'show' : 'hide' );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onHide',\n          function() {\n            visibleWatcher.set( false );\n          }\n        );\n\n        SemanticUI.onEvent( settings, 'onShow',\n          function() {\n            visibleWatcher.set( true );\n          }\n        );\n      }\n\n      SemanticUI.linkEvents( scope, settings, $.fn.sidebar.settings, {\n        onVisible: 'onVisible',\n        onShow:    'onShow',\n        onChange:  'onChange',\n        onHide:    'onHide',\n        onHidden:  'onHidden'\n      });\n\n      var pusher = $('.pusher');\n\n      if ( pusher.length )\n      {\n        element.insertBefore( pusher );\n      }\n\n      // Initialize the element with the given settings.\n      element.sidebar( settings );\n\n      if ( scope.visible )\n      {\n        element.sidebar( 'show' );\n      }\n\n      if ( angular.isFunction( scope.onInit ) )\n      {\n        scope.onInit( element );\n      }\n    };\n  }\n\n})( angular.module('semantic-ui-sidebar', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticStickyLink', ['SemanticUI', SemanticStickyLink])\n    .directive('smStickyBind', ['SemanticUI', SemanticStickyBind])\n    .directive('smSticky', ['SemanticStickyLink', SemanticSticky])\n  ;\n\n  var BEHAVIORS = {\n    smStickyRefresh:   'refresh'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'sticky', method );\n    }]);\n  });\n\n  function SemanticStickyBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smStickyBind', 'sticky' );\n  }\n\n  function SemanticSticky(SemanticStickyLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        /* Optional */\n        context: '@',\n        settings: '=',\n        onInit: '=',\n        /* Events */\n        onReposition: '=',\n        onScroll: '=',\n        onStick: '=',\n        onUnstick: '=',\n        onTop: '=',\n        onBottom: '='\n      },\n\n      template: '<div class=\"ui sticky\" ng-transclude></div>',\n\n      link: SemanticStickyLink\n    };\n  }\n\n  function SemanticStickyLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      element.ready(function()\n      {\n        var settings = scope.settings || {};\n\n        SemanticUI.linkSettings( scope, element, attributes, 'sticky', true );\n\n        SemanticUI.linkEvents( scope, settings, $.fn.sticky.settings, {\n          onReposition:   'onReposition',\n          onScroll:       'onScroll',\n          onStick:        'onStick',\n          onStick:        'onStick',\n          onTop:          'onTop',\n          onBottom:       'onBottom'\n        });\n\n        if ( !settings.context )\n        {\n          settings.context = scope.context;\n        }\n\n        element.sticky( settings );\n\n        if ( angular.isFunction( scope.onInit ) )\n        {\n          scope.onInit( element );\n        }\n      });\n    };\n  }\n\n})( angular.module('semantic-ui-sticky', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .factory('SemanticTabMenuLink', ['SemanticUI', '$timeout', SemanticTabMenuLink])\n    .directive('smTabBind', ['SemanticUI', SemanticTabBind])\n    .directive('smTabMenu', ['SemanticTabMenuLink', SemanticTabMenu])\n    .directive('smTab', ['SemanticUI', SemanticTab])\n  ;\n\n  var BEHAVIORS = {\n    smTabSet:       'change tab'\n  };\n\n  angular.forEach( BEHAVIORS, function(method, directive)\n  {\n    app.directive( directive, ['SemanticUI', function(SemanticUI)\n    {\n      return SemanticUI.createBehavior( directive, 'tab', method );\n    }]);\n  });\n\n  function SemanticTabBind(SemanticUI)\n  {\n    return SemanticUI.createBind( 'smTabBind', 'tab' );\n  }\n\n  function SemanticTabMenu(SemanticTabMenuLink)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      scope: {\n        /* Required */\n        tabs: '=',\n        /* Optional */\n        active: '=?',\n        settings: '='\n      },\n\n      template: [\n        '<div class=\"ui menu\">',\n        '  <a class=\"item\" ng-repeat=\"(name, title) in tabs\" ng-class=\"{active: name === active}\" data-tab=\"{{ name }}\" sm-html=\"title\"></a>',\n        '</div>'\n      ].join('\\n'),\n\n      link: SemanticTabMenuLink\n    }\n  }\n\n  function SemanticTabMenuLink(SemanticUI, $timeout)\n  {\n    return function(scope, element, attributes)\n    {\n      var setActiveTab = function( tab )\n      {\n        if ( tab )\n        {\n          element.tab( 'change tab', tab );\n        }\n      };\n\n      $timeout(function()\n      {\n        var settings = scope.settings || {};\n        var elements = element.children('.item');\n        var hasActive = !!attributes.active;\n\n        SemanticUI.linkSettings( scope, elements, attributes, 'tab', true );\n\n        if ( hasActive )\n        {\n          var activeWatcher = SemanticUI.watcher( scope, 'active',\n            function( tab ) {\n              setActiveTab( tab );\n            }\n          );\n\n          SemanticUI.onEvent( settings, 'onVisible',\n            function(tab) {\n              activeWatcher.set( tab );\n            }\n          );\n        }\n\n        elements.tab( settings );\n\n        if ( hasActive )\n        {\n          setActiveTab( scope.active );\n        }\n      });\n    };\n  }\n\n  function SemanticTab(SemanticUI)\n  {\n    return {\n\n      restrict: 'E',\n\n      replace: true,\n\n      transclude: true,\n\n      scope: {\n        name: '@'\n      },\n\n      template: '<div class=\"ui tab\" data-tab=\"{{ name }}\" ng-transclude></div>'\n    };\n  }\n\n})( angular.module('semantic-ui-tab', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  app\n    .directive('smTimeAgo', SemanticTimeAgo)\n  ;\n\n  function SemanticTimeAgo()\n  {\n    var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    var THS = ['th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'];\n    var HOURS = ['12', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11'];\n\n    function getTime(date)\n    {\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var minutesPadded = minutes < 10 ? '0' + minutes : minutes;\n\n      return HOURS[ hours % HOURS.length ] + ':' + minutesPadded + ( hours < 12 ? 'AM' : 'PM' );\n    }\n\n    function getTh(x)\n    {\n      return (x >= 11 && x <= 13) ? (x + 'th') : x + THS[ x % THS.length ];\n    }\n\n    function getDaysAgo(date)\n    {\n      return Math.ceil( ( new Date().getTime() - date.getTime() ) / 86400000 );\n    }\n\n    return {\n\n      restrict: 'A',\n\n      link: function(scope, element, attributes)\n      {\n        var timeout = false;\n        var value = false;\n        var fuzzy = false;\n\n        var updateText = function()\n        {\n          var now = new Date();\n          var today = new Date( now.getFullYear(), now.getMonth(), now.getDate() );\n          var yesterday = new Date( now.getFullYear(), now.getMonth(), now.getDate() - 1 );\n\n          var elapsed = now.getTime() - value.getTime();\n\n          var text = '';\n          var updateIn = false;\n\n          if ( elapsed < 60000 )\n          { // 1 minute\n            text = 'Just now';\n            updateIn = 60000 - elapsed;\n          }\n          else if ( elapsed < 3600000 )\n          { // 1 hour\n            var minutesAgo = Math.floor( elapsed / 60000 );\n            text = minutesAgo === 1 ? '1 minute ago' : minutesAgo + ' minutes ago';\n            updateIn = elapsed % 60000;\n          }\n          else if ( value.getTime() > today.getTime() )\n          { // today\n            text = 'Today at ' + getTime( value );\n            updateIn = elapsed % 3600000;\n          }\n          else if ( value.getTime() > yesterday.getTime() )\n          { // yesterday\n            text = 'Yesterday at ' + getTime( value );\n            updateIn = elapsed % 3600000;\n          }\n          else if ( value.getMonth() === now.getMonth() && value.getFullYear() === now.getFullYear() )\n          { // this month\n            text += 'The ' + getTh( value.getDate() );\n            text +=' at ' + getTime( value );\n            text += ' (' + getDaysAgo( value ) + ' days ago)';\n            updateIn = 86400000;\n          }\n          else\n          { // before the current month\n            text += MONTHS[ value.getMonth() ] + ' ' + getTh( value.getDate() );\n            if ( value.getFullYear() !== now.getFullYear() ) {\n              text += ' ' + value.getFullYear();\n            }\n            text += ' at ' + getTime( value );\n            var daysAgo = getDaysAgo( value );\n            if ( daysAgo <= 60 ) {\n              text += ' (' + getDaysAgo( value ) + ' days ago)'\n            }\n          }\n\n          element.text( text );\n\n          if ( timeout )\n          {\n            clearTimeout( timeout );\n            timeout = false;\n          }\n\n          if ( updateIn )\n          {\n            timeout = setTimeout(function()\n            {\n              timeout = false;\n              updateText();\n\n            }, updateIn);\n          }\n        };\n\n        scope.$watch( attributes.smTimeAgo, function(updated)\n        {\n          value = new Date( updated );\n          updateText();\n        });\n      }\n    }\n  }\n\n})( angular.module('semantic-ui-timeago', ['semantic-ui-core']) );\n","(function(app)\n{\n\n  // Transitions: scale, fade, flip, drop, fly, swing, browse, slide, jiggle, flash, shake, pulse, tada, bounce\n\n  app\n    .factory('SemanticTransitionLink', ['SemanticUI', SemanticTransitionLink])\n    .directive('smTransition', ['SemanticTransitionLink', SemanticTransition])\n  ;\n\n  function SemanticTransition(SemanticTransitionLink)\n  {\n    return {\n\n      restrict: 'A',\n\n      scope: {\n        smTransition: '@',\n        smTransitionEvents: '@',\n        smTransitionOther: '@'\n      },\n\n      link: SemanticTransitionLink\n    };\n  }\n\n  function SemanticTransitionLink(SemanticUI)\n  {\n    return function(scope, element, attributes)\n    {\n      scope.smTransitionEvents = scope.smTransitionEvents || 'click';\n\n      element.on( scope.smTransitionEvents, function()\n      {\n        ( scope.smTransitionOther ? $( scope.smTransitionOther ) : element ).transition( scope.smTransition );\n      });\n    };\n  }\n\n})( angular.module('semantic-ui-transition', ['semantic-ui-core']) );\n"]}