.clearfix::after {
  content: "";
  clear: both;
  display: table;
}

.agent {
  height: 100%;

  .agent-footer {
    background-color: @deep_purple;
  }

  .agent-footer-holder {
    bottom: 0px;
    left: 0px;
    right: 0px;
    position: absolute;
    background-color: #fff;
    border-top: 1px rgba(0, 0, 0, 0.1) solid;

    padding: 0;
    height: 105px;
    flex: 0 0 auto;
  }

  .agent-header {
    -webkit-print-color-adjust: exact !important;
    background-color: @deep_purple;
    color: @rb_green;

    h1, h3 {
      line-height: 33px;
    }
  }

  .agent-content {
    @import 'agent-content-style.less';
    font-weight: 300;
    flex: 0 1 auto;
    left: 0px;
    right: 0px;
    overflow: auto;
  }

  .btn {
    font-weight: 600;
  }

  label {
    font-weight: normal;
    font-size: 13px;
    line-height: 2.4;

    input[type=radio] {
      margin: 4px 4px 0 0;
    }
  }
}

.markdown-metadata {
  clear: both;
  margin: 10px 0;

  table, td, th {
    border: 1px solid #CCC;
    text-align: left;
  }

  table {
    border-collapse: collapse;
    width: 100%;
  }

  tr:nth-child(even), thead {
    background-color: @brand-grey;
  }

  th, td {
    padding: 5px;
  }

}

.text-metadata {
  clear: both;
  margin: 10px 0;
}

.modal-footer {
  border-top: none;
  clear: both;
}

.modal-footer button, .modal-footer input {
  width: 87px;
}

.modal-footer button:focus {
  outline-style: auto;
  outline-width: 4px;
  transition: unset;
  box-shadow: 0 0 5px 2px @focus-outline;
}

#cfbar:focus {
  outline-color: @focus-outline;
  outline-width: 4px;
  outline-style: auto;
}

.noTransition {
  -moz-transition: none;
  -webkit-transition: none;
  -o-transition: color 0 ease-in;
  transition: none;
}

.inlineCheckboxGrouped {
  position: relative;
  white-space: nowrap;

  label {
    background: #e4e4e4;
    border-radius: 5px;
    padding: 0 10px 0 5px;
    width: 100%;
    box-shadow: inset -1px -2px 0px 0px rgba(255, 255, 255, 0.6), inset -1px 2px 0px 0px rgba(0, 0, 0, 0.1);
    min-height: 30px;
  }

  input {
    width: 20px;
    height: 14px;

  }
  &:after {
    content: '';
    width: 9px;
    height: 100%;
    position: absolute;
    top: 0px;
    left: 25px;
    border-left: 2px solid rgba(0, 0, 0, 0.0);
    background: transparent;
  }

  input[type=checkbox] {
    margin: 7px 0 0 0;
    padding: 0;
  }

  span {
    white-space: pre-line;
    vertical-align: middle;
    display: inline-block;
    margin-right: 20px;
    -ms-word-break: break-all;
    word-break: ~"break-word";
  }

  input[type=text] {
    width: calc(~"100% - 20px");
    background-color: transparent;
    border: none;
    margin-left: 11px;
    display: inline-block;
    margin: 0 6px 0 0;
    padding: 1px;
    text-indent: 5px;
    height: 30px;
  }

  i {
    font-size: 13px;
    margin-left: 4px;
    vertical-align: middle;
  }
}

.longLineTrim {
  text-overflow: ellipsis;
  overflow: hidden;
}

span.disabled {
  color: rgba(0,0,0,0.55);
}

.splitModal, .splitModal:visited {
  position: absolute;
  right: 40px;
  top: 10px;
  color: #fff;
  opacity: 1;
  text-shadow: none;
}

.splitModal .active {
  color: @rb_lightblue;
}

.splitModal:hover, .question-context-btn:hover {
  color: @rb_lightblue;
  opacity: 1;
}

.question-context-btn {
  position: absolute;
  right: 80px;
  top: 10px;
  color: #fff;
  text-shadow: none;
}

.question-context-btn .active {
  color: @rb_lightblue;
}

.question-context-ul {
  margin: 0 0 10px 0;
}

.question-context-inner-wrapper {
  height: 166px;
  width: 100%;
  border: 1px #dbdbdb solid;
  overflow-y: scroll;
  border-radius: 5px;
  margin-bottom: 60px;
}

.question-context {
  margin: 0 24px;
}

.api-log {
  flex: 4;
  background-color: rgb(243, 243, 245);
  width: 200px;
}

#log-scrollable-container {
  width:100%;
  height:598px;
  padding: 5px;
  overflow: scroll;
}
#scroll-content {
  font-family: monospace;
  font-size: 12px;
  height: 100%;
  padding-left: 0px;
  margin: 0px;
}

.agent-wrapper {
  width: 200px;
  flex: 4;
}

#log-wrapper {
  display: flex;
  height: 100%;
}

.split-screen-footer {
  width: 50%;
  left: initial !important;
}

.hoverOverLightElement {
  transition: box-shadow .1s ease;
}

.hoverOverLightElement:hover {
  box-shadow: inset 0 0 100px 100px rgba(255,255,255,0.4);
}
